classdef TxCoderCoh < Subsystem_
    %TxCoderCoh v1.0, Lingchen Huang, 2015/3/16
    
    properties
        nPol
        FrameLen
        FrameOverlapLen
        Output
        
        % SourceBinarys
        BitsType 	 % PRBS, Random, UserDef
        PRBSOrder
        UserDefined
        FECType
        
        % Modulate_
        mn  = 4
        map = 'Gray'
        
        % Coder types
        CoderType       = 'TDM' % TDM, N-TDM, OFDM, 'Example'
        
        %         % TDM
        %
        %         % N-TDM
        %         OverSamplingRatio
        %         FiltShpae
        %         RolloffFactor
        %         FilterLength
        %         % OFDM
        %         NumFFT
        %         NumGI
        %         NumSubCarr
        %         NumPilot
        %         IndSubCarr
        %         IndPilot
        %         BitLoadingActive
        %         PreEmphasisActive
        %         CD
        %         % FTN
        %         AccFactor
        %
        %         % Training
        %         TrainingActvie
        %         TFETraningActive
        %         TimeDelay
        %         TimingFreqEst
        %         TFESeqType
        %         CETraningActive
        %         ChannelEst
        %         CESeqType
        %         CEBlock
    end
    properties (SetAccess = private)
        PRBS
        Mod
        Coder
        %         Training
    end
    
    methods
        %%
        function obj = TxCoderCoh(varargin)
            SetVariousProp(obj, varargin{:})
        end
        %%
        function y = Processing(obj)
            
            % generate PRBS sequence
            prbs = obj.PRBS.Processing;
            
            % modulate bit sequence to symbols
            mod = obj.Mod.Processing(prbs);
            
            % advanced modulation and frame overlap
            y = obj.Coder.Processing(mod);
            
        end
        %%
        function Init(obj)
            switch obj.CoderType
                case 'TDM'
                    obj.Coder = CoderTDM('nPol', obj.nPol,...
                        'FrameLen', obj.FrameLen,...
                        'FrameOverlapLen', obj.FrameOverlapLen,...
                        'mn', obj.mn);
                case 'N-TDM'
                    obj.Coder = CoderNTDM('PolarDiversity', obj.PolarDiversity,...
                        'BitPerSymbol', obj.BitPerSymbol,...
                        'MapMethod', obj.MapMethod,...
                        'FiltShpae', obj.FiltShpae,...
                        'OverSamplingRatio',obj.OverSamplingRatio,...
                        'RolloffFactor',obj.RolloffFactor,...
                        'FilterLength',obj.FilterLength,...
                        'Option',obj.Option);
                case 'OFDM'
                    obj.Coder = CoderOFDM('PolarDiversity', obj.PolarDiversity,...
                        'BitPerSymbol', obj.BitPerSymbol,...
                        'MapMethod', obj.MapMethod,...
                        'NumFFT', obj.NumFFT,...
                        'NumGI', obj.NumGI,...
                        'NumSubCarr', obj.NumSubCarr,...
                        'NumPilot', obj.NumPilot,...
                        'IndSubCarr', obj.IndSubCarr,...
                        'IndPilot', obj.IndPilot,...
                        'BitLoadingActive', obj.BitLoadingActive,...
                        'PreEmphasisActive', obj.PreEmphasisActive,...
                        'Option',obj.Option);
                case 'FTN'
                    obj.Coder = CoderFTN('PolarDiversity', obj.PolarDiversity,...
                        'BitPerSymbol', obj.BitPerSymbol,...
                        'MapMethod', obj.MapMethod,...
                        'FiltShpae', obj.FiltShpae,...
                        'OverSamplingRatio',obj.OverSamplingRatio,...
                        'RolloffFactor',obj.RolloffFactor,...
                        'FilterLength',obj.FilterLength,...
                        'AccFactor', obj.AccFactor,...
                        'Option',obj.Option);
                case 'Example'
                    obj.Coder = CoderExample('PolarDiversity', obj.PolarDiversity,...
                        'BitPerSymbol', obj.BitPerSymbol,...
                        'MapMethod', obj.MapMethod,...
                        'Option',obj.Option);
            end
            Init(obj.Coder);
            obj.PRBS = SourceBinarys('nSource', obj.nPol,...
                        'BitsType', obj.BitsType,...
                        'BitseqLen', obj.Coder.DemandBitsNumPerPol,...
                        'PRBSOrder', obj.PRBSOrder,...
                        'UserDefined', obj.UserDefined,...
                        'FECType', obj.FECType);
            Init(obj.PRBS);
            obj.Mod = ModulateQAM('mn', obj.mn,...
                        'map', obj.map);
            Init(obj.Mod);
            %                 obj.Training = CoderTraining('PolarDiversity', obj.PolarDiversity,...
            %                     'BitPerSymbol', obj.BitPerSymbol,...
            %                     'NumFFT', obj.NumFFT,...
            %                     'NumGI', obj.NumGI,...
            %                     'PreEmphasisActive', obj.PreEmphasisActive,...
            %                     'TFETraningActive', obj.TFETraningActive,...
            %                     'TimeDelay', obj.TimeDelay,...
            %                     'TimingFreqEst', obj.TimingFreqEst,...
            %                     'TFESeqType', obj.TFESeqType,...
            %                     'CETraningActive', obj.CETraningActive,...
            %                     'ChannelEst', obj.ChannelEst,...
            %                     'CESeqType', obj.CESeqType,...
            %                     'CEBlock', obj.CEBlock,...
            %                     'Active', obj.TrainingActvie);
        end
        %%
        function Reset(obj)
            Reset(obj.PRBS);
            Reset(obj.Coder);
        end
    end
end
